// üìÅ src/controllers/lineWebhookController.js
const prisma = require('../utils/prisma');
const {
  pushSugarResultCard,
  pushBloodPressureCard,
  pushRegisterFlex,
  pushRegisterSuccessCard,
  replyMessage,
} = require('../utils/lineMessaging');

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠ (‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ)
const sendHelpMessage = async (replyToken) => {
  await replyMessage(replyToken, {
    type: 'text',
    text: `üí° ‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡πà‡∏∞\n\n` +
          `1Ô∏è‚É£ ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å\n‡∏û‡∏¥‡∏°‡∏û‡πå: ‡∏™‡∏°‡∏±‡∏Ñ‡∏£: ‡∏ä‡∏∑‡πà‡∏≠, ‡πÄ‡∏û‡∏®, ‡∏≠‡∏≤‡∏¢‡∏∏, ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£\n‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á: ‡∏™‡∏°‡∏±‡∏Ñ‡∏£: ‡∏™‡∏°‡∏ä‡∏≤‡∏¢, ‡∏ä‡∏≤‡∏¢, 55, 0812345678\n\n` +
          `2Ô∏è‚É£ ‡∏™‡πà‡∏á‡∏Ñ‡πà‡∏≤‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•\n‡∏û‡∏¥‡∏°‡∏û‡πå: ‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•: ‡∏Ñ‡πà‡∏≤ (‡∏Å‡πà‡∏≠‡∏ô/‡∏´‡∏•‡∏±‡∏á)\n‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á: ‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•: 120 ‡∏Å‡πà‡∏≠‡∏ô\n\n` +
          `3Ô∏è‚É£ ‡∏™‡πà‡∏á‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏±‡∏ô\n‡∏û‡∏¥‡∏°‡∏û‡πå: ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏±‡∏ô: ‡∏Ñ‡πà‡∏≤/‡∏Ñ‡πà‡∏≤ (‡∏ä‡∏µ‡∏û‡∏à‡∏£: ‡∏Ñ‡πà‡∏≤)\n‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á: ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏±‡∏ô: 120/80 ‡∏ä‡∏µ‡∏û‡∏à‡∏£: 70\n\n` +
          `4Ô∏è‚É£ ‡∏™‡πà‡∏á‡∏Ñ‡πà‡∏≤‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏±‡∏ô‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡∏±‡∏ô\n‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á: ‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•: 120 ‡∏Å‡πà‡∏≠‡∏ô ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏±‡∏ô: 120/80 ‡∏ä‡∏µ‡∏û‡∏à‡∏£: 70\n\n` +
          `üìå ‡∏´‡∏≤‡∏Å‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏™‡∏á‡∏™‡∏±‡∏¢ ‡∏û‡∏¥‡∏°‡∏û‡πå "‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠" ‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢‡∏Ñ‡πà‡∏∞ üòä`,
  });
};

exports.handleWebhook = async (req, res) => {
  const events = req.body.events;

  if (!events || !Array.isArray(events)) {
    return res.sendStatus(200); // ‡∏™‡πà‡∏á 200 ‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏°‡∏µ events ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ LINE ‡πÑ‡∏°‡πà‡∏™‡πà‡∏á‡∏ã‡πâ‡∏≥
  }

  for (const event of events) {
    const lineUserId = event.source?.userId;
    if (!lineUserId) {
      console.error('No userId found in event:', event);
      continue;
    }

    // üü¢ ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å
    if (event.type === 'follow') {
      const existing = await prisma.patient.findUnique({ where: { lineUserId } });
      if (!existing) {
        await pushRegisterFlex(lineUserId);
      } else {
        await replyMessage(event.replyToken, {
          type: 'text',
          text: `‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡∏∏‡∏ì ${existing.name} ‡∏Ñ‡πà‡∏∞ ‡∏Ñ‡∏∏‡∏ì‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡πÑ‡∏ß‡πâ‡πÅ‡∏•‡πâ‡∏ß‡∏ô‡∏∞‡∏Ñ‡∏∞ üòä\n` +
                `‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πà‡∏á‡∏Ñ‡πà‡∏≤‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•‡∏´‡∏£‡∏∑‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏±‡∏ô‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢‡∏Ñ‡πà‡∏∞\n` +
                `‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏î‡∏π‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô ‡∏û‡∏¥‡∏°‡∏û‡πå "‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠" ‡∏Ñ‡πà‡∏∞`,
        });
      }
      continue;
    }

    // üü¢ ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
    if (event.type === 'message' && event.message.type === 'text') {
      const text = event.message.text.trim(); // ‡πÑ‡∏°‡πà‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô lowercase ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•

      // üü° ‡∏û‡∏¥‡∏°‡∏û‡πå "‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠"
      if (text.toLowerCase() === "‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠") {
        await sendHelpMessage(event.replyToken);
        continue;
      }

      // üü° ‡∏û‡∏¥‡∏°‡∏û‡πå "‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô"
      if (text.toLowerCase() === "‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô") {
        const existing = await prisma.patient.findUnique({ where: { lineUserId } });
        if (!existing) {
          await pushRegisterFlex(lineUserId);
        } else {
          await replyMessage(event.replyToken, {
            type: 'text',
            text: `‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡∏∏‡∏ì ${existing.name} ‡∏Ñ‡πà‡∏∞ ‡∏Ñ‡∏∏‡∏ì‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡πÑ‡∏ß‡πâ‡πÅ‡∏•‡πâ‡∏ß‡∏ô‡∏∞‡∏Ñ‡∏∞ üòä\n` +
                  `‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πà‡∏á‡∏Ñ‡πà‡∏≤‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•‡∏´‡∏£‡∏∑‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏±‡∏ô‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢‡∏Ñ‡πà‡∏∞\n` +
                  `‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏î‡∏π‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô ‡∏û‡∏¥‡∏°‡∏û‡πå "‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠" ‡∏Ñ‡πà‡∏∞`,
          });
        }
        continue;
      }

      // üü° ‡∏û‡∏¥‡∏°‡∏û‡πå "‡∏™‡πà‡∏á‡∏ú‡∏•‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•/‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏±‡∏ô‡πÇ‡∏•‡∏´‡∏¥‡∏ï" (‡∏à‡∏≤‡∏Å‡∏£‡∏¥‡∏ä‡πÄ‡∏°‡∏ô‡∏π)
      if (text.toLowerCase() === "‡∏™‡πà‡∏á‡∏ú‡∏•‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•/‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏±‡∏ô‡πÇ‡∏•‡∏´‡∏¥‡∏ï") {
        const patient = await prisma.patient.findUnique({ where: { lineUserId } });
        if (!patient) {
          await replyMessage(event.replyToken, {
            type: 'text',
            text: `‡∏Ñ‡∏∏‡∏ì‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏Ñ‡πà‡∏∞ üòä\n` +
                  `‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏û‡∏¥‡∏°‡∏û‡πå "‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô" ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡∏Ñ‡πà‡∏∞`,
          });
        } else {
          await replyMessage(event.replyToken, {
            type: 'text',
            text: `üíâ ‡∏™‡πà‡∏á‡∏ú‡∏•‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•‡∏´‡∏£‡∏∑‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏±‡∏ô‡πÇ‡∏•‡∏´‡∏¥‡∏ï\n\n` +
                  `‡∏Ñ‡∏∏‡∏ì ${patient.name} ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ‡∏ï‡∏≤‡∏°‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡∏µ‡πâ‡∏Ñ‡πà‡∏∞\n` +
                  `- ‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•: ‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•: 120 ‡∏Å‡πà‡∏≠‡∏ô\n` +
                  `- ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏±‡∏ô: ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏±‡∏ô: 120/80 ‡∏ä‡∏µ‡∏û‡∏à‡∏£: 70\n` +
                  `- ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡∏±‡∏ô: ‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•: 120 ‡∏Å‡πà‡∏≠‡∏ô ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏±‡∏ô: 120/80 ‡∏ä‡∏µ‡∏û‡∏à‡∏£: 70\n` +
                  `üìå ‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏î‡∏π‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏° ‡∏û‡∏¥‡∏°‡∏û‡πå "‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠" ‡∏Ñ‡πà‡∏∞`,
          });
        }
        continue;
      }

      // üü° ‡∏û‡∏¥‡∏°‡∏û‡πå "‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û" (‡∏à‡∏≤‡∏Å‡∏£‡∏¥‡∏ä‡πÄ‡∏°‡∏ô‡∏π)
      if (text.toLowerCase() === "‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û") {
        const patient = await prisma.patient.findUnique({ where: { lineUserId } });
        if (!patient) {
          await replyMessage(event.replyToken, {
            type: 'text',
            text: `‡∏Ñ‡∏∏‡∏ì‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏Ñ‡πà‡∏∞ üòä\n` +
                  `‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏û‡∏¥‡∏°‡∏û‡πå "‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô" ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡∏Ñ‡πà‡∏∞`,
          });
        } else {
          // ‡∏î‡∏∂‡∏á‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢
          const latestReport = await prisma.report.findFirst({
            where: { patientId: patient.id },
            orderBy: { recordedAt: 'desc' },
          });

          if (!latestReport) {
            await replyMessage(event.replyToken, {
              type: 'text',
              text: `‡∏Ñ‡∏∏‡∏ì ${patient.name} ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡∏Ñ‡πà‡∏∞ üòä\n` +
                    `‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏™‡πà‡∏á‡∏Ñ‡πà‡∏≤‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•‡∏´‡∏£‡∏∑‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏±‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡∏ô‡∏∞‡∏Ñ‡∏∞`,
            });
          } else {
            // ‡∏à‡∏±‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û
            const sugarText = latestReport.bloodSugar
              ? `‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•: ${latestReport.bloodSugar} mg/dL (${latestReport.bloodSugarStatus || 'N/A'})`
              : '‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•: -';
            const pressureText = latestReport.systolic && latestReport.diastolic
              ? `‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏±‡∏ô: ${latestReport.systolic}/${latestReport.diastolic} mmHg (${latestReport.systolicStatus || 'N/A'})`
              : '‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏±‡∏ô: -';
            const pulseText = latestReport.pulse
              ? `‡∏ä‡∏µ‡∏û‡∏à‡∏£: ${latestReport.pulse} bpm`
              : '‡∏ä‡∏µ‡∏û‡∏à‡∏£: -';
            const recordedAt = new Date(latestReport.recordedAt).toLocaleString('th-TH', {
              year: 'numeric',
              month: '2-digit',
              day: '2-digit',
              hour: '2-digit',
              minute: '2-digit',
            });

            await replyMessage(event.replyToken, {
              type: 'text',
              text: `üìä ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì ${patient.name}\n\n` +
                    `${sugarText}\n` +
                    `${pressureText}\n` +
                    `${pulseText}\n` +
                    `‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å: ${recordedAt}\n\n` +
                    `üìå ‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏î‡∏π‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏° ‡∏û‡∏¥‡∏°‡∏û‡πå "‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠" ‡∏Ñ‡πà‡∏∞`,
            });
          }
        }
        continue;
      }

      // üü° ‡∏™‡∏°‡∏±‡∏Ñ‡∏£: ‡∏™‡∏°‡∏ä‡∏≤‡∏¢, ‡∏ä‡∏≤‡∏¢, 55, 0812345678
      if (text.toLowerCase().startsWith("‡∏™‡∏°‡∏±‡∏Ñ‡∏£:")) {
        const parts = text.replace(/‡∏™‡∏°‡∏±‡∏Ñ‡∏£:/i, "").split(",");
        if (parts.length === 4) {
          const name = parts[0].trim();
          const gender = parts[1].trim();
          const age = parseInt(parts[2].trim());
          const phone = parts[3].trim();

          // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°
          if (!name || !['‡∏ä‡∏≤‡∏¢', '‡∏´‡∏ç‡∏¥‡∏á'].includes(gender.toLowerCase()) || isNaN(age) || age < 0 || age > 120 || !phone.match(/^\d{10}$/)) {
            await replyMessage(event.replyToken, {
              type: 'text',
              text: `‚ùó ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Ñ‡πà‡∏∞\n` +
                    `- ‡∏ä‡∏∑‡πà‡∏≠: ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠\n` +
                    `- ‡πÄ‡∏û‡∏®: ‡∏Å‡∏£‡∏≠‡∏Å "‡∏ä‡∏≤‡∏¢" ‡∏´‡∏£‡∏∑‡∏≠ "‡∏´‡∏ç‡∏¥‡∏á"\n` +
                    `- ‡∏≠‡∏≤‡∏¢‡∏∏: ‡∏Å‡∏£‡∏≠‡∏Å‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç (0-120)\n` +
                    `- ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£: ‡∏Å‡∏£‡∏≠‡∏Å‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç 10 ‡∏´‡∏•‡∏±‡∏Å\n` +
                    `‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á: ‡∏™‡∏°‡∏±‡∏Ñ‡∏£: ‡∏™‡∏°‡∏ä‡∏≤‡∏¢, ‡∏ä‡∏≤‡∏¢, 55, 0812345678`,
            });
            continue;
          }

          const existing = await prisma.patient.findUnique({ where: { lineUserId } });

          if (existing) {
            await replyMessage(event.replyToken, {
              type: 'text',
              text: `‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡∏∏‡∏ì ${existing.name} ‡∏Ñ‡πà‡∏∞ ‡∏Ñ‡∏∏‡∏ì‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡πÑ‡∏ß‡πâ‡πÅ‡∏•‡πâ‡∏ß‡∏ô‡∏∞‡∏Ñ‡∏∞ üòä`,
            });
          } else {
            await prisma.patient.create({
              data: { name, gender, age, phone, lineUserId },
            });
            await pushRegisterSuccessCard(lineUserId, name);
            await replyMessage(event.replyToken, {
              type: 'text',
              text: `‚úÖ ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡πà‡∏∞ ‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∏‡∏ì ${name} ‡∏ó‡∏µ‡πà‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡∏Ñ‡πà‡∏∞ üòä\n` +
                    `‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πà‡∏á‡∏Ñ‡πà‡∏≤‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•‡∏´‡∏£‡∏∑‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏±‡∏ô‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢‡∏Ñ‡πà‡∏∞\n` +
                    `‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏î‡∏π‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô ‡∏û‡∏¥‡∏°‡∏û‡πå "‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠" ‡∏Ñ‡πà‡∏∞`,
            });
          }
        } else {
          await replyMessage(event.replyToken, {
            type: 'text',
            text: `‚ùó ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö 4 ‡∏ä‡πà‡∏≠‡∏á: ‡∏ä‡∏∑‡πà‡∏≠, ‡πÄ‡∏û‡∏®, ‡∏≠‡∏≤‡∏¢‡∏∏, ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£\n` +
                  `‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á: ‡∏™‡∏°‡∏±‡∏Ñ‡∏£: ‡∏™‡∏°‡∏ä‡∏≤‡∏¢, ‡∏ä‡∏≤‡∏¢, 55, 0812345678`,
          });
        }
        continue;
      }

      // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á
      const patient = await prisma.patient.findUnique({ where: { lineUserId } });
      if (!patient) {
        await replyMessage(event.replyToken, {
          type: 'text',
          text: `‡∏Ñ‡∏∏‡∏ì‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏Ñ‡πà‡∏∞ üòä\n` +
                `‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏û‡∏¥‡∏°‡∏û‡πå "‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô" ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡∏Ñ‡πà‡∏∞`,
        });
        continue;
      }

      // üéØ ‡∏Å‡∏£‡∏ì‡∏µ‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•‡πÅ‡∏•‡∏∞/‡∏´‡∏£‡∏∑‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏±‡∏ô
      // Define regex patterns
      const sugarRegex = /‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•: (\d+) (‡∏Å‡πà‡∏≠‡∏ô|‡∏´‡∏•‡∏±‡∏á)/i;
      const pressureRegex = /‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏±‡∏ô: (\d+)\/(\d+)(?: ‡∏ä‡∏µ‡∏û‡∏à‡∏£: (\d+))?/i;

      // Match the text with regex
      const sugarMatch = text.match(sugarRegex);
      const pressureMatch = text.match(pressureRegex);

      if (sugarMatch || pressureMatch) {
        let bloodSugar, mealTime, systolic, diastolic, pulse;
        let errors = [];

        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡πà‡∏≤‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•
        if (sugarMatch) {
          bloodSugar = parseInt(sugarMatch[1]);
          mealTime = sugarMatch[2] === '‡∏Å‡πà‡∏≠‡∏ô' ? 'before' : 'after';

          if (bloodSugar < 0 || bloodSugar > 500) {
            errors.push(`‚ùó ‡∏Ñ‡πà‡∏≤‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏• ${bloodSugar} mg/dL ‡∏î‡∏π‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏à‡∏∞‡∏ú‡∏¥‡∏î‡∏õ‡∏Å‡∏ï‡∏¥ (‡∏Ñ‡∏ß‡∏£‡∏≠‡∏¢‡∏π‡πà‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á 0-500 mg/dL)`);
          }
        }

        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏±‡∏ô
        if (pressureMatch) {
          systolic = parseInt(pressureMatch[1]);
          diastolic = parseInt(pressureMatch[2]);
          pulse = pressureMatch[3] ? parseInt(pressureMatch[3]) : null;

          if (systolic < 50 || systolic > 250 || diastolic < 30 || diastolic > 150) {
            errors.push(`‚ùó ‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏±‡∏ô ${systolic}/${diastolic} mmHg ‡∏î‡∏π‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏à‡∏∞‡∏ú‡∏¥‡∏î‡∏õ‡∏Å‡∏ï‡∏¥ (‡∏Ñ‡∏ß‡∏£‡∏≠‡∏¢‡∏π‡πà‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á 50/30 - 250/150 mmHg)`);
          }
          if (pulse && (pulse < 30 || pulse > 200)) {
            errors.push(`‚ùó ‡∏Ñ‡πà‡∏≤‡∏ä‡∏µ‡∏û‡∏à‡∏£ ${pulse} bpm ‡∏î‡∏π‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏à‡∏∞‡∏ú‡∏¥‡∏î‡∏õ‡∏Å‡∏ï‡∏¥ (‡∏Ñ‡∏ß‡∏£‡∏≠‡∏¢‡∏π‡πà‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á 30-200 bpm)`);
          }
        }

        // ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î
        if (errors.length > 0) {
          await replyMessage(event.replyToken, {
            type: 'text',
            text: errors.join('\n') + `\n‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡∏™‡πà‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏∞\n‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á: ‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•: 120 ‡∏Å‡πà‡∏≠‡∏ô ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏±‡∏ô: 120/80 ‡∏ä‡∏µ‡∏û‡∏à‡∏£: 70`,
          });
          continue;
        }

        // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
        let bloodSugarStatus;
        if (!bloodSugar) {
          bloodSugarStatus = null;
        } else if (mealTime === 'before') {
          if (bloodSugar < 70) bloodSugarStatus = '‡∏ï‡πà‡∏≥';
          else if (bloodSugar <= 100) bloodSugarStatus = '‡∏õ‡∏Å‡∏ï‡∏¥';
          else if (bloodSugar <= 125) bloodSugarStatus = '‡∏™‡∏π‡∏á';
          else bloodSugarStatus = '‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏™‡∏π‡∏á';
        } else { // after ‡∏´‡∏£‡∏∑‡∏≠ other
          if (bloodSugar < 70) bloodSugarStatus = '‡∏ï‡πà‡∏≥';
          else if (bloodSugar < 140) bloodSugarStatus = '‡∏õ‡∏Å‡∏ï‡∏¥';
          else if (bloodSugar <= 199) bloodSugarStatus = '‡∏™‡∏π‡∏á';
          else bloodSugarStatus = '‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏™‡∏π‡∏á';
        }

        let systolicStatus;
        if (!systolic) {
          systolicStatus = null;
        } else if (systolic < 90) systolicStatus = '‡∏ï‡πà‡∏≥';
        else if (systolic <= 129) systolicStatus = '‡∏õ‡∏Å‡∏ï‡∏¥';
        else if (systolic <= 139) systolicStatus = '‡∏™‡∏π‡∏á';
        else systolicStatus = '‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏™‡∏π‡∏á';

        // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
        await prisma.report.create({
          data: {
            patientId: patient.id,
            bloodSugar: bloodSugar || 0,
            mealTime: mealTime || 'other',
            systolic: systolic || 0,
            diastolic: diastolic || 0,
            pulse: pulse || null,
            recordedAt: new Date(),
            createdAt: new Date(),
            bloodSugarStatus,
            systolicStatus,
          },
        });

        // ‡∏Å‡∏£‡∏ì‡∏µ‡∏Ñ‡πà‡∏≤‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•
        if (sugarMatch) {
          let advice = "‡∏Ñ‡πà‡∏≤‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡πÄ‡∏Å‡∏ì‡∏ë‡πå‡∏õ‡∏Å‡∏ï‡∏¥ ‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ô‡∏µ‡πâ‡πÑ‡∏ß‡πâ‡∏ô‡∏∞‡∏Ñ‡∏∞";
          if (mealTime === 'before') {
            if (bloodSugar < 70) {
              advice = "‡∏Ñ‡πà‡∏≤‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•‡∏ï‡πà‡∏≥ ‡∏Ñ‡∏ß‡∏£‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏ó‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡∏ß‡πà‡∏≤‡∏á ‡πÄ‡∏ä‡πà‡∏ô ‡∏ô‡πâ‡∏≥‡∏ú‡∏•‡πÑ‡∏°‡πâ‡∏´‡∏£‡∏∑‡∏≠‡∏•‡∏π‡∏Å‡∏≠‡∏° ‡πÅ‡∏•‡πâ‡∏ß‡∏ß‡∏±‡∏î‡∏ã‡πâ‡∏≥‡πÉ‡∏ô 15 ‡∏ô‡∏≤‡∏ó‡∏µ ‡∏´‡∏≤‡∏Å‡∏¢‡∏±‡∏á‡∏ï‡πà‡∏≥‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏´‡πâ‡∏£‡∏µ‡∏ö‡∏û‡∏ö‡πÅ‡∏û‡∏ó‡∏¢‡πå‡∏Ñ‡πà‡∏∞";
            } else if (bloodSugar > 125) {
              advice = "‡∏Ñ‡πà‡∏≤‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏™‡∏π‡∏á ‡∏Ñ‡∏ß‡∏£‡∏õ‡∏£‡∏∂‡∏Å‡∏©‡∏≤‡πÅ‡∏û‡∏ó‡∏¢‡πå‡∏ó‡∏±‡∏ô‡∏ó‡∏µ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏Ñ‡πà‡∏∞";
            } else if (bloodSugar > 100) {
              advice = "‡∏Ñ‡πà‡∏≤‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•‡∏™‡∏π‡∏á‡∏Å‡∏ß‡πà‡∏≤‡∏õ‡∏Å‡∏ï‡∏¥ ‡∏Ñ‡∏ß‡∏£‡∏´‡∏•‡∏µ‡∏Å‡πÄ‡∏•‡∏µ‡πà‡∏¢‡∏á‡∏Ç‡∏≠‡∏á‡∏´‡∏ß‡∏≤‡∏ô ‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢‡πÄ‡∏ö‡∏≤‡πÜ ‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏∂‡∏Å‡∏©‡∏≤‡πÅ‡∏û‡∏ó‡∏¢‡πå‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡∏£‡∏±‡∏ö‡∏¢‡∏≤‡∏Ñ‡πà‡∏∞";
            }
          } else {
            if (bloodSugar < 70) {
              advice = "‡∏Ñ‡πà‡∏≤‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•‡∏ï‡πà‡∏≥ ‡∏Ñ‡∏ß‡∏£‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏ó‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡∏ß‡πà‡∏≤‡∏á ‡πÄ‡∏ä‡πà‡∏ô ‡∏ô‡πâ‡∏≥‡∏ú‡∏•‡πÑ‡∏°‡πâ‡∏´‡∏£‡∏∑‡∏≠‡∏•‡∏π‡∏Å‡∏≠‡∏° ‡πÅ‡∏•‡πâ‡∏ß‡∏ß‡∏±‡∏î‡∏ã‡πâ‡∏≥‡πÉ‡∏ô 15 ‡∏ô‡∏≤‡∏ó‡∏µ ‡∏´‡∏≤‡∏Å‡∏¢‡∏±‡∏á‡∏ï‡πà‡∏≥‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏´‡πâ‡∏£‡∏µ‡∏ö‡∏û‡∏ö‡πÅ‡∏û‡∏ó‡∏¢‡πå‡∏Ñ‡πà‡∏∞";
            } else if (bloodSugar > 200) {
              advice = "‡∏Ñ‡πà‡∏≤‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏™‡∏π‡∏á ‡∏Ñ‡∏ß‡∏£‡∏õ‡∏£‡∏∂‡∏Å‡∏©‡∏≤‡πÅ‡∏û‡∏ó‡∏¢‡πå‡∏ó‡∏±‡∏ô‡∏ó‡∏µ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏Ñ‡πà‡∏∞";
            } else if (bloodSugar > 140) {
              advice = "‡∏Ñ‡πà‡∏≤‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•‡∏™‡∏π‡∏á‡∏Å‡∏ß‡πà‡∏≤‡∏õ‡∏Å‡∏ï‡∏¥ ‡∏Ñ‡∏ß‡∏£‡∏´‡∏•‡∏µ‡∏Å‡πÄ‡∏•‡∏µ‡πà‡∏¢‡∏á‡∏Ç‡∏≠‡∏á‡∏´‡∏ß‡∏≤‡∏ô ‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢‡πÄ‡∏ö‡∏≤‡πÜ ‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏∂‡∏Å‡∏©‡∏≤‡πÅ‡∏û‡∏ó‡∏¢‡πå‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡∏£‡∏±‡∏ö‡∏¢‡∏≤‡∏Ñ‡πà‡∏∞";
            }
          }
          await pushSugarResultCard(lineUserId, patient.name, bloodSugar, bloodSugarStatus, advice);
        }

        // ‡∏Å‡∏£‡∏ì‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏±‡∏ô
        if (pressureMatch) {
          let advice = "‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏±‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡πÄ‡∏Å‡∏ì‡∏ë‡πå‡∏õ‡∏Å‡∏ï‡∏¥ ‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ô‡∏µ‡πâ‡πÑ‡∏ß‡πâ‡∏ô‡∏∞‡∏Ñ‡∏∞";
          if (systolic >= 140 || diastolic >= 90) {
            advice = "‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏±‡∏ô‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏™‡∏π‡∏á ‡∏Ñ‡∏ß‡∏£‡∏õ‡∏£‡∏∂‡∏Å‡∏©‡∏≤‡πÅ‡∏û‡∏ó‡∏¢‡πå‡∏ó‡∏±‡∏ô‡∏ó‡∏µ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏Ñ‡πà‡∏∞";
          } else if (systolic >= 130) {
            advice = "‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏±‡∏ô‡∏™‡∏π‡∏á‡∏Å‡∏ß‡πà‡∏≤‡∏õ‡∏Å‡∏ï‡∏¥ ‡∏Ñ‡∏ß‡∏£‡∏•‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏¥‡∏ô‡πÄ‡∏Ñ‡πá‡∏° ‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢‡∏™‡∏°‡πà‡∏≥‡πÄ‡∏™‡∏°‡∏≠ ‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏∂‡∏Å‡∏©‡∏≤‡πÅ‡∏û‡∏ó‡∏¢‡πå‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ï‡∏£‡∏ß‡∏à‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡∏Ñ‡πà‡∏∞";
          } else if (systolic < 90 || diastolic < 60) {
            advice = "‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏±‡∏ô‡∏ï‡πà‡∏≥‡∏Å‡∏ß‡πà‡∏≤‡∏õ‡∏Å‡∏ï‡∏¥ ‡∏≠‡∏≤‡∏à‡∏°‡∏µ‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏ß‡∏µ‡∏¢‡∏ô‡∏´‡∏±‡∏ß ‡∏Ñ‡∏ß‡∏£‡∏î‡∏∑‡πà‡∏°‡∏ô‡πâ‡∏≥‡∏°‡∏≤‡∏Å‡πÜ ‡∏û‡∏±‡∏Å‡∏ú‡πà‡∏≠‡∏ô‡πÉ‡∏´‡πâ‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡∏û‡∏≠ ‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏∂‡∏Å‡∏©‡∏≤‡πÅ‡∏û‡∏ó‡∏¢‡πå‡∏´‡∏≤‡∏Å‡∏°‡∏µ‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡∏£‡∏∏‡∏ô‡πÅ‡∏£‡∏á‡∏Ñ‡πà‡∏∞";
          }
          await pushBloodPressureCard(lineUserId, patient.name, systolic, diastolic, pulse, systolicStatus, advice);
        }

        await replyMessage(event.replyToken, {
          type: 'text',
          text: `‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡πà‡∏∞ ‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∏‡∏ì ${patient.name} ‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡πà‡∏∞ üòä`,
        });
        continue;
      }

      // üü° ‡∏Å‡∏£‡∏ì‡∏µ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç
      await replyMessage(event.replyToken, {
        type: 'text',
        text: `‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢‡∏Ñ‡πà‡∏∞ ‡πÑ‡∏°‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° "${text}" üòÖ\n` +
              `‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πà‡∏á‡∏Ñ‡πà‡∏≤‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•‡∏´‡∏£‡∏∑‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏±‡∏ô‡πÑ‡∏î‡πâ‡∏ï‡∏≤‡∏°‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡∏µ‡πâ‡∏Ñ‡πà‡∏∞\n` +
              `- ‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•: ‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•: 120 ‡∏Å‡πà‡∏≠‡∏ô\n` +
              `- ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏±‡∏ô: ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏±‡∏ô: 120/80 ‡∏ä‡∏µ‡∏û‡∏à‡∏£: 70\n` +
              `- ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡∏±‡∏ô: ‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•: 120 ‡∏Å‡πà‡∏≠‡∏ô ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏±‡∏ô: 120/80 ‡∏ä‡∏µ‡∏û‡∏à‡∏£: 70\n` +
              `‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏î‡∏π‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏° ‡∏û‡∏¥‡∏°‡∏û‡πå "‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠" ‡∏Ñ‡πà‡∏∞`,
      });
    }
  }

  res.sendStatus(200); // ‡∏¢‡πâ‡∏≤‡∏¢‡∏°‡∏≤‡∏≠‡∏¢‡∏π‡πà‡∏´‡∏•‡∏±‡∏á loop ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏ß‡πà‡∏≤‡∏™‡πà‡∏á response ‡πÄ‡∏™‡∏°‡∏≠
};